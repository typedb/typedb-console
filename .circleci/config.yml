# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

version: 2.1

orbs:
  win: circleci/windows@5.0.0
  macos: circleci/macos@2.4.0

executors:
  linux-arm64-amazonlinux-2:
    docker:
      - image: amazonlinux:2
    resource_class: arm.large
    working_directory: ~/typedb-console

  linux-x86_64-amazonlinux-2:
    docker:
      - image: amazonlinux:2
    resource_class: large
    working_directory: ~/typedb-console

  linux-x86_64-ubuntu-2204:
    docker:
      - image: ubuntu:22.04
    resource_class: large
    working_directory: ~/typedb-console

  mac-arm64:
    macos:
      xcode: "13.4.1"
    resource_class: macos.m1.medium.gen1
    working_directory: ~/typedb-console

  win-x86_64:
    resource_class: windows.xlarge
    machine:
      image: windows-server-2022-gui:2024.01.1
    shell: cmd.exe

commands:
  install-bazel-yum:
    parameters:
      arch:
        type: string
    steps:
      - run: |
          amazon-linux-extras install python3.8 -y
          yum install -y git tar java-1.8.0-openjdk gcc gcc-c++ file lsof which procps
          ln -s /usr/bin/python3.8 /usr/bin/python3
          curl -OL "https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-<<parameters.arch>>"
          mv "bazelisk-linux-<<parameters.arch>>" /usr/local/bin/bazel
          chmod a+x /usr/local/bin/bazel

  install-bazel-apt:
    parameters:
      arch:
        type: string
    steps:
      - run: |
          apt-get -y update
          DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata
          apt-get -y install curl build-essential git python3 python3-pip default-jre lsof cmake file wget
          curl -OL "https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-<<parameters.arch>>"
          mv "bazelisk-linux-<<parameters.arch>>" /usr/local/bin/bazel
          chmod a+x /usr/local/bin/bazel

  install-bazel-mac:
    parameters:
      bazel-arch:
        type: string
    steps:
      - run: |
          brew install python@3.8
          curl -OL "https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-darwin-<<parameters.bazel-arch>>"
          sudo mv "bazelisk-darwin-<<parameters.bazel-arch>>" /usr/local/bin/bazel
          chmod a+x /usr/local/bin/bazel

jobs:
  deploy-artifact-snapshot-linux-x86_64:
    executor: linux-x86_64-amazonlinux-2
    steps:
      - checkout
      - install-bazel-yum:
          arch: amd64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_TYPEDB_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_TYPEDB_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //:deploy-linux-x86_64-targz -- snapshot

  deploy-artifact-snapshot-linux-arm64:
    executor: linux-arm64-amazonlinux-2
    steps:
      - checkout
      - install-bazel-yum:
          arch: arm64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_TYPEDB_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_TYPEDB_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //:deploy-linux-arm64-targz -- snapshot

  deploy-artifact-snapshot-mac-x86_64:
    executor: mac-arm64
    steps:
      - checkout
      - macos/install-rosetta
      - install-bazel-mac:
          bazel-arch: amd64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_TYPEDB_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_TYPEDB_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //:deploy-mac-x86_64-zip -- snapshot

  deploy-artifact-snapshot-mac-arm64:
    executor: mac-arm64
    steps:
      - checkout
      - install-bazel-mac:
          bazel-arch: arm64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_TYPEDB_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_TYPEDB_PASSWORD
          bazel run --define version=$(git rev-parse HEAD) //:deploy-mac-arm64-zip -- snapshot

  deploy-artifact-snapshot-windows-x86_64:
    executor: win-x86_64
    working_directory: ~/typedb-driver
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\deploy_snapshot.bat

  deploy-artifact-release-linux-x86_64:
    executor: linux-x86_64-amazonlinux-2
    steps:
      - checkout
      - install-bazel-yum:
          arch: amd64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_TYPEDB_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_TYPEDB_PASSWORD
          bazel run --define version=$(cat VERSION) //:deploy-linux-x86_64-targz --compilation_mode=opt -- release

  deploy-artifact-release-linux-arm64:
    executor: linux-arm64-amazonlinux-2
    steps:
      - checkout
      - install-bazel-yum:
          arch: arm64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_TYPEDB_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_TYPEDB_PASSWORD
          bazel run --define version=$(cat VERSION) //:deploy-linux-arm64-targz --compilation_mode=opt -- release

  deploy-artifact-release-mac-x86_64:
    executor: mac-arm64
    steps:
      - checkout
      - macos/install-rosetta
      - install-bazel-mac:
          bazel-arch: amd64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_TYPEDB_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_TYPEDB_PASSWORD
          bazel run --define version=$(cat VERSION) //:deploy-mac-x86_64-zip --compilation_mode=opt -- release

  deploy-artifact-release-mac-arm64:
    executor: mac-arm64
    steps:
      - checkout
      - install-bazel-mac:
          bazel-arch: arm64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_TYPEDB_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_TYPEDB_PASSWORD
          bazel run --define version=$(cat VERSION) //:deploy-mac-arm64-zip --compilation_mode=opt -- release

  deploy-artifact-release-windows-x86_64:
    executor: win-x86_64
    working_directory: ~/typedb-driver
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\deploy_release.bat

  deploy-github:
    executor: linux-x86_64-ubuntu-2204
    steps:
      - checkout
      - install-bazel-apt:
          arch: amd64
      - run:
          name: "Publish Release on GitHub"
          command: |
            wget https://github.com/tcnksm/ghr/releases/download/v0.16.2/ghr_v0.16.2_linux_amd64.tar.gz
            tar -xf ghr_v0.16.2_linux_amd64.tar.gz
            ghr_v0.16.2_linux_amd64/ghr -t ${REPO_GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} -n "TypeDB Console $(cat VERSION)" -b "$(cat ./RELEASE_NOTES_LATEST.md)" \
              -c ${CIRCLE_SHA1} -delete $(cat VERSION)

  sync-dependencies:
    executor: linux-x86_64-ubuntu-2204
    steps:
      - checkout
      - install-bazel-apt:
          arch: amd64
      - run: |
          export SYNC_DEPENDENCIES_TOKEN=$REPO_GITHUB_TOKEN
          bazel run @vaticle_dependencies//tool/sync:dependencies -- --source ${CIRCLE_PROJECT_REPONAME}@$(cat VERSION)

  release-cleanup:
    executor: linux-x86_64-ubuntu-2204
    steps:
      - checkout
      - run: |
          apt update -y
          apt install -y git
          git push --delete https://$REPO_GITHUB_TOKEN@github.com/vaticle/typedb-console.git $CIRCLE_BRANCH


workflows:
  snapshot:
    jobs:
      - deploy-artifact-snapshot-linux-x86_64:
          filters:
            branches:
              only: [master, development]
      - deploy-artifact-snapshot-linux-arm64:
          filters:
            branches:
              only: [master, development]
      - deploy-artifact-snapshot-mac-x86_64:
          filters:
            branches:
              only: [master, development]
      - deploy-artifact-snapshot-mac-arm64:
          filters:
            branches:
              only: [master, development]
      - deploy-artifact-snapshot-windows-x86_64:
          filters:
            branches:
              only: [master, development]

  release:
    jobs:
      - deploy-artifact-release-linux-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-artifact-release-linux-arm64:
          filters:
            branches:
              only: [release]
      - deploy-artifact-release-mac-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-artifact-release-mac-arm64:
          filters:
            branches:
              only: [release]
      - deploy-artifact-release-windows-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-github:
          filters:
            branches:
              only: [release]
          requires:
            - deploy-artifact-release-linux-x86_64
            - deploy-artifact-release-linux-arm64
            - deploy-artifact-release-mac-x86_64
            - deploy-artifact-release-mac-arm64
            - deploy-artifact-release-windows-x86_64
      - sync-dependencies:
          filters:
            branches:
              only: [release]
          requires:
            - deploy-github
      - release-cleanup:
          filters:
            branches:
              only: [release]
          requires:
            - sync-dependencies
