#
# Copyright (C) 2022 Vaticle
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1

orbs:
  win: circleci/windows@2.0.0

executors:
  linux-arm64:
    machine:
      image: ubuntu-2204:current
      resource_class: arm.medium
    working_directory: ~/typedb-console

  linux-x86_64:
    machine:
      image: ubuntu-2204:current
    working_directory: ~/typedb-console

  mac-arm64:
    macos:
      xcode: "14.2.0"
    resource_class: macos.m1.medium.gen1
    working_directory: ~/typedb-console

  mac-x86_64:
    macos:
      xcode: "14.2.0"
    working_directory: ~/typedb-console


commands:
  install-bazel-linux:
    parameters:
      arch:
        type: string
    steps:
      - run: |
          curl -OL "https://github.com/bazelbuild/bazelisk/releases/download/v1.17.0/bazelisk-linux-<<parameters.arch>>"
          sudo mv "bazelisk-linux-<<parameters.arch>>" /usr/local/bin/bazel
          chmod a+x /usr/local/bin/bazel

  install-bazel-mac:
    steps:
      - run: brew install bazelisk

jobs:
  deploy-artifact-snapshot-linux-x86_64:
    executor: linux-x86_64
    steps:
      - checkout
      - install-bazel-linux:
          arch: amd64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(git rev-parse HEAD) //:deploy-linux-x86_64-targz -- snapshot

  deploy-artifact-snapshot-linux-arm64:
    executor: linux-arm64
    steps:
      - checkout
      - install-bazel-linux:
          arch: arm64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(git rev-parse HEAD) //:deploy-linux-arm64-targz -- snapshot

  deploy-artifact-snapshot-mac-x86_64:
    executor: mac-x86_64
    steps:
      - checkout
      - install-bazel-mac
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(git rev-parse HEAD) //:deploy-mac-x86_64-zip -- snapshot

  deploy-artifact-snapshot-mac-arm64:
    executor: mac-arm64
    steps:
      - checkout
      - install-bazel-mac
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(git rev-parse HEAD) //:deploy-mac-arm64-zip -- snapshot

  deploy-artifact-snapshot-windows-x86_64:
    executor:
      name: win/default
      shell: cmd.exe
    working_directory: ~/typedb-driver
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\deploy_snapshot.bat

  deploy-apt-snapshot-x86_64:
    executor: linux-x86_64
    steps:
      - checkout
      - install-bazel-linux:
          arch: amd64
      - run: |
          export DEPLOY_APT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_APT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(git rev-parse HEAD) //:deploy-apt-x86_64 -- snapshot

  deploy-apt-snapshot-arm64:
    executor: linux-arm64
    steps:
      - checkout
      - install-bazel-linux:
          arch: arm64
      - run: |
          export DEPLOY_APT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_APT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(git rev-parse HEAD) //:deploy-apt-arm64 -- snapshot

  deploy-artifact-release-linux-x86_64:
    executor: linux-x86_64
    steps:
      - checkout
      - install-bazel-linux:
          arch: amd64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(cat VERSION) //:deploy-linux-x86_64-targz -- release
      - run: |
          mkdir -p ~/dist
          cp bazel-bin/typedb-console-linux-x86_64.zip ~/dist/typedb-console-linux-x86_64.zip
      - persist_to_workspace:
          root: ~/dist
          paths: ["./*"]

  deploy-artifact-release-linux-arm64:
    executor: linux-arm64
    steps:
      - checkout
      - install-bazel-linux:
          arch: arm64
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(cat VERSION) //:deploy-linux-arm64-targz -- release
      - run: |
          mkdir -p ~/dist
          cp bazel-bin/typedb-console-linux-arm64.zip ~/dist/typedb-console-linux-arm64.zip
      - persist_to_workspace:
          root: ~/dist
          paths: ["./*"]
    
  deploy-artifact-release-mac-x86_64:
    executor: mac-x86_64
    steps:
      - checkout
      - install-bazel-mac
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(cat VERSION) //:deploy-mac-x86_64-zip -- release
      - run: |
          mkdir -p ~/dist
          cp bazel-bin/typedb-console-mac-x86_64.zip ~/dist/typedb-console-mac-x86_64.zip
      - persist_to_workspace:
          root: ~/dist
          paths: ["./*"]
  
  deploy-artifact-release-mac-arm64:
    executor: mac-arm64
    steps:
      - checkout
      - install-bazel-mac
      - run: |
          export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(cat VERSION) //:deploy-mac-arm64-zip -- release
      - run: |
          mkdir -p ~/dist
          cp bazel-bin/typedb-console-mac-arm64.zip ~/dist/typedb-console-mac-arm64.zip
      - persist_to_workspace:
          root: ~/dist
          paths: [ "./*" ] 
          
  deploy-artifact-release-windows-x86_64:
    executor:
      name: win/default
      shell: cmd.exe
    working_directory: ~/typedb-driver
    steps:
      - checkout
      - run: .circleci\windows\prepare.bat
      - run: .circleci\windows\deploy_release.bat
      - run: |
          mkdir -p ~/dist
          cp bazel-bin/typedb-console-mac-arm64.zip ~/dist/typedb-console-windows-x86_64.zip
      - persist_to_workspace:
          root: ~/dist
          paths: [ "./*" ]

  deploy-apt-release-x86_64:
    executor: linux-x86_64
    steps:
      - checkout
      - install-bazel-mac
      - run: |
          export DEPLOY_APT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_APT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(cat VERSION) //:deploy-apt-x86_64 -- release
      - run: |
          mkdir -p ~/dist
          cp bazel-bin/typedb-console__x86_64.deb ~/dist/typedb-console__x86_64.deb
      - persist_to_workspace:
          root: ~/dist
          paths: ["./*"]
  
  deploy-apt-release-arm64:
    executor: linux-arm64
    steps:
      - checkout
      - install-bazel-mac
      - run: |
          export DEPLOY_APT_USERNAME=$REPO_VATICLE_USERNAME
          export DEPLOY_APT_PASSWORD=$REPO_VATICLE_PASSWORD
          bazel run @vaticle_dependencies//tool/bazelinstall:remote_cache_setup.sh
          bazel run --define version=$(cat VERSION) //:deploy-apt-arm64 -- release
      - run: |
          mkdir -p ~/dist
          cp bazel-bin/typedb-console__arm64.deb ~/dist/typedb-console__arm64.deb
      - persist_to_workspace:
          root: ~/dist
          paths: ["./*"]

  deploy-github:
    executor: linux-x86_64
    steps:
      - attach_workspace:
          at: ~/dist
      - checkout
      - install-bazel-linux:
          arch: amd64
      - run:
          name: "Publish Draft Release on GitHub"
          command: |
            wget https://github.com/tcnksm/ghr/releases/download/v0.12.1/ghr_v0.12.1_linux_amd64.tar.gz
            tar -xf ghr_v0.12.1_linux_amd64.tar.gz
            ghr_v0.12.1_linux_amd64/ghr -t ${REPO_GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} -n "TypeDB Console $(cat VERSION)" -b "$(cat ./RELEASE_NOTES_LATEST.md)" \
              -c ${CIRCLE_SHA1} -delete -draft $(cat VERSION) ~/dist/

  release-cleanup:
    executor: linux-x86_64
    steps:
      - checkout
      - run: git push --delete https://$REPO_GITHUB_TOKEN@github.com/vaticle/typedb-console.git $CIRCLE_BRANCH


workflows:
  snapshot:
    jobs:
      - deploy-artifact-snapshot-linux-x86_64:
          filters:
            branches:
              only: [master, development, platform-specific-releases]
      - deploy-artifact-snapshot-linux-arm64:
          filters:
            branches:
              only: [master, development, platform-specific-releases]
      - deploy-artifact-snapshot-mac-x86_64:
          filters:
            branches:
              only: [master, development, platform-specific-releases]
      - deploy-artifact-snapshot-mac-arm64:
          filters:
            branches:
              only: [master, development, platform-specific-releases]
      - deploy-artifact-snapshot-windows-x86_64:
          filters:
            branches:
              only: [master, development, platform-specific-releases]
      - deploy-apt-snapshot-x86_64:
          filters:
            branches:
              only: [master, development]
      - deploy-apt-snapshot-arm64:
          filters:
            branches:
              only: [ master, development, platform-specific-releases ]
  release:
    jobs:
      - deploy-artifact-release-linux-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-artifact-release-linux-arm64:
          filters:
            branches:
              only: [release]
      - deploy-artifact-release-mac-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-artifact-release-mac-arm64:
          filters:
            branches:
              only: [release]
      - deploy-artifact-release-windows-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-apt-release-x86_64:
          filters:
            branches:
              only: [release]
      - deploy-apt-release-arm64:
          filters:
            branches:
              only: [release]
      - deploy-github:
          filters:
            branches:
              only: [release]
          requires:
            - deploy-artifact-release-linux-x86_64
            - deploy-artifact-release-linux-arm64
            - deploy-artifact-release-mac-x86_64
            - deploy-artifact-release-mac-arm64
            - deploy-artifact-release-windows-x86_64
            - deploy-apt-release-x86_64
            - deploy-apt-release-arm64
      - release-cleanup:
          filters:
            branches:
              only: [release]
          requires:
            - deploy-github
