#
# Copyright (C) 2021 Vaticle
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

config:
  version-candidate: VERSION
  dependencies:
    dependencies: [build]
    typedb-common: [build, release]
    typedb-client-java: [build, release]

build:
  quality:
    filter:
      owner: vaticle
      branch: master
    build-analysis:
      image: vaticle-ubuntu-20.04
      type: foreground
      command: |
        SONARCLOUD_CODE_ANALYSIS_CREDENTIAL=$SONARCLOUD_CREDENTIAL \
           bazel run @vaticle_dependencies//tool/sonarcloud:code-analysis -- \
           --project-key vaticle_typedb_console --branch=$GRABL_BRANCH --commit-id=$GRABL_COMMIT
    dependency-analysis:
      image: vaticle-ubuntu-20.04
      command: |
        bazel run @vaticle_dependencies//factory/analysis:dependency-analysis
  correctness:
    build:
      image: vaticle-ubuntu-20.04
      type: foreground
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel run @vaticle_dependencies//tool/checkstyle:test-coverage
        bazel build //...
        dependencies/maven/update.sh
        git diff --exit-code dependencies/maven/artifacts.snapshot
    deploy-artifact-snapshot:
      filter:
        owner: vaticle
        branch: master
      image: vaticle-ubuntu-20.04
      type: foreground
      dependencies: [build]
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run --define version=$(git rev-parse HEAD) //:deploy-linux-targz -- snapshot
        bazel run --define version=$(git rev-parse HEAD) //:deploy-mac-zip -- snapshot
        bazel run --define version=$(git rev-parse HEAD) //:deploy-windows-zip -- snapshot
    deploy-apt-snapshot:
      filter:
        owner: vaticle
        branch: master
      image: vaticle-ubuntu-20.04
      type: foreground
      dependencies: [build]
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        export DEPLOY_APT_USERNAME=$REPO_VATICLE_USERNAME
        export DEPLOY_APT_PASSWORD=$REPO_VATICLE_PASSWORD
        # Do not upgrade Python until bazelbuild/rules_pkg#397 is fixed
        pyenv install 3.7.9
        pyenv global 3.7.9
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.7.9/lib/python3.7/site-packages/lsb_release.py
        bazel run --define version=$(git rev-parse HEAD) //:deploy-apt -- snapshot
release:
  filter:
    owner: vaticle
    branch: master
  validation:
    validate-dependencies:
      image: vaticle-ubuntu-20.04
      type: foreground
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        bazel test //:release-validate-deps  --test_output=streamed
  deployment:
    deploy-github:
      image: vaticle-ubuntu-20.04
      type: foreground
      command: |
        pyenv install -s 3.6.10
        pyenv global 3.6.10 system
        pip install certifi
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        export RELEASE_NOTES_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @vaticle_dependencies//tool/release:create-notes -- console $(cat VERSION) ./RELEASE_TEMPLATE.md
        export DEPLOY_GITHUB_TOKEN=$REPO_GITHUB_TOKEN
        bazel run --define version=$(cat VERSION) //:deploy-github -- $GRABL_COMMIT
    deploy-apt-release:
      image: vaticle-ubuntu-20.04
      dependencies: [deploy-github]
      type: foreground
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        cat VERSION
        export DEPLOY_APT_USERNAME=$REPO_VATICLE_USERNAME
        export DEPLOY_APT_PASSWORD=$REPO_VATICLE_PASSWORD
        # Do not upgrade Python until bazelbuild/rules_pkg#397 is fixed
        pyenv install 3.7.9
        pyenv global 3.7.9
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.7.9/lib/python3.7/site-packages/lsb_release.py
        bazel run --define version=$(cat VERSION) //:deploy-apt -- release
    deploy-artifact-release:
      image: vaticle-ubuntu-20.04
      dependencies: [deploy-github]
      type: foreground
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @vaticle_dependencies//distribution/artifact:create-netrc
        export DEPLOY_ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export DEPLOY_ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run --define version=$(cat VERSION) //:deploy-linux-targz -- release
        bazel run --define version=$(cat VERSION) //:deploy-mac-zip -- release
        bazel run --define version=$(cat VERSION) //:deploy-windows-zip -- release

